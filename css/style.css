@charset "UTF-8";
/* ===============================================
# グローバル
=============================================== */
/* ===============================================
# 関数（function = 関数）
=============================================== */
/* ===============================================
# 関数（function = 関数）
=============================================== */
/* ===============================================
# 変数（variables = 変数）
=============================================== */
/* ===============================================
# 関数（function = 関数）
=============================================== */
/* ===============================================
# 関数（function = 関数）
=============================================== */
/* ===============================================
# 変数（variables = 変数）
=============================================== */
/* ===============================================
# mixin（プロパティや値をセットにしてまとめる）
=============================================== */
/* ===============================================
# 関数（function = 関数）
=============================================== */
/* ===============================================
# 関数（function = 関数）
=============================================== */
/* ===============================================
# 変数（variables = 変数）
=============================================== */
/* ===============================================
# 関数（function = 関数）
=============================================== */
/* ===============================================
# 関数（function = 関数）
=============================================== */
/* ===============================================
# 変数（variables = 変数）
=============================================== */
/* ===============================================
# mixin（プロパティや値をセットにしてまとめる）
=============================================== */
/* ===============================================
# キーフレーム（classにする）
=============================================== */
/* ===============================================
# フォント
=============================================== */
@import url("https://fonts.googleapis.com/css2?family=Noto+Serif+JP:wght@200;300;400;500&display=swap");
/* ===============================================
# 関数（function = 関数）
=============================================== */
/* ===============================================
# 変数（variables = 変数）
=============================================== */
* {
  box-sizing: border-box;
  font-family: "Noto Serif JP", serif;
  font-style: 1rem;
  font-weight: 500;
  -ms-overflow-style: none;
  scrollbar-width: none;
}

*::-webkit-scrollbar {
  display: none;
}

html {
  width: 100%;
  height: 100%;
  font-size: 1rem;
}

body {
  min-width: 375px;
  width: 100%;
  height: 100%;
  position: relative;
}

main {
  background: #ffffff;
  overflow: hidden;
}

ul {
  list-style: none;
}

p, h2, h3, h4, a {
  font-size: 1rem;
  font-weight: 500;
}

p {
  line-height: 1.6;
}

a {
  text-decoration: none;
  color: #3b4043;
  display: inline-block;
}

img {
  width: 100%;
  height: auto;
}

/* ===============================================
# 関数（function = 関数）
=============================================== */
/* ===============================================
# 変数（variables = 変数）
=============================================== */
.container {
  width: 100%;
  padding: 0 20px;
}

/* ===============================================
# ページ
=============================================== */
/* ===============================================
# 関数（function = 関数）
=============================================== */
/* ===============================================
# 関数（function = 関数）
=============================================== */
/* ===============================================
# 変数（variables = 変数）
=============================================== */
/* ===============================================
# 関数（function = 関数）
=============================================== */
/* ===============================================
# 関数（function = 関数）
=============================================== */
/* ===============================================
# 変数（variables = 変数）
=============================================== */
/* ===============================================
# mixin（プロパティや値をセットにしてまとめる）
=============================================== */
/* ===============================================
# パーツ
=============================================== */
/* ===============================================
# 関数（function = 関数）
=============================================== */
/* ===============================================
# 関数（function = 関数）
=============================================== */
/* ===============================================
# 変数（variables = 変数）
=============================================== */
/* ===============================================
# 関数（function = 関数）
=============================================== */
/* ===============================================
# 関数（function = 関数）
=============================================== */
/* ===============================================
# 変数（variables = 変数）
=============================================== */
/* ===============================================
# mixin（プロパティや値をセットにしてまとめる）
=============================================== */
/* ===============================================
# header
=============================================== */
/* ===============================================
# 関数（function = 関数）
=============================================== */
/* ===============================================
# 関数（function = 関数）
=============================================== */
/* ===============================================
# 変数（variables = 変数）
=============================================== */
/* ===============================================
# 関数（function = 関数）
=============================================== */
/* ===============================================
# 関数（function = 関数）
=============================================== */
/* ===============================================
# 変数（variables = 変数）
=============================================== */
/* ===============================================
# mixin（プロパティや値をセットにしてまとめる）
=============================================== */
/* ===============================================
# footer
=============================================== */
/* ===============================================
# 関数（function = 関数）
=============================================== */
/* ===============================================
# 関数（function = 関数）
=============================================== */
/* ===============================================
# 変数（variables = 変数）
=============================================== */
/* ===============================================
# 関数（function = 関数）
=============================================== */
/* ===============================================
# 関数（function = 関数）
=============================================== */
/* ===============================================
# 変数（variables = 変数）
=============================================== */
/* ===============================================
# mixin（プロパティや値をセットにしてまとめる）
=============================================== */
/* ===============================================
# ハンバーガーメニュー
=============================================== */
.menu-sp {
  position: fixed;
  top: 2%;
  right: 2%;
  display: none;
}
@media screen and (max-width: 1100px) {
  .menu-sp {
    display: inline-block;
  }
}
@media screen and (max-width: 550px) {
  .menu-sp {
    top: 1%;
  }
}
.menu-sp.is-open span:nth-of-type(1) {
  transform: translateY(6px) rotate(-45deg);
  top: 35%;
}
.menu-sp.is-open span:nth-of-type(2) {
  opacity: 0;
}
.menu-sp.is-open span:nth-of-type(3) {
  transform: translateY(-6px) rotate(45deg);
  top: 62%;
}

.menu-btn {
  width: 50px;
  height: 50px;
  position: relative;
}
.menu-btn span {
  width: 50%;
  height: 2px;
  display: inline-block;
  background: #3b4043;
  position: absolute;
  left: 24%;
  transition: all 0.4s;
  border-radius: 5px;
}
.menu-btn span:nth-of-type(1) {
  top: 30%;
}
.menu-btn span:nth-of-type(2) {
  top: 50%;
}
.menu-btn span:nth-of-type(3) {
  top: 70%;
}

#header.is-open {
  height: 100%;
}
#header.is-open .menu-sp {
  display: inline-block;
}
#header.is-open .header--inner {
  width: 70%;
  margin: 0 auto;
  flex-direction: column;
  align-items: flex-start;
}
#header.is-open .logo {
  margin-left: -100px;
  margin-bottom: 80px;
}
#header.is-open .global--nav {
  display: block;
  width: 100%;
}
#header.is-open .global--nav ul {
  flex-direction: column;
  width: 100%;
}
#header.is-open .global--nav ul li {
  width: 100%;
  border-bottom: solid 1px #3b4043;
}
#header.is-open .global--nav ul a {
  width: 100%;
  padding: 20px;
}
#header.is-open .hide {
  display: block;
  width: 100%;
  text-align: right;
}
#header.is-open .hide a {
  display: inline-block;
  padding: 20px 0;
}

#main.is-active, #footer.is-active {
  display: none;
}/*# sourceMappingURL=style.css.map */