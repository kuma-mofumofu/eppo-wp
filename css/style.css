@charset "UTF-8";
/* ===============================================
# グローバル
=============================================== */
/* ===============================================
# 関数（function = 関数）
=============================================== */
/* ===============================================
# 関数（function = 関数）
=============================================== */
/* ===============================================
# 変数（variables = 変数）
=============================================== */
/* ===============================================
# 関数（function = 関数）
=============================================== */
/* ===============================================
# 関数（function = 関数）
=============================================== */
/* ===============================================
# 変数（variables = 変数）
=============================================== */
/* ===============================================
# mixin（プロパティや値をセットにしてまとめる）
=============================================== */
/* ===============================================
# 関数（function = 関数）
=============================================== */
/* ===============================================
# 関数（function = 関数）
=============================================== */
/* ===============================================
# 変数（variables = 変数）
=============================================== */
/* ===============================================
# 関数（function = 関数）
=============================================== */
/* ===============================================
# 関数（function = 関数）
=============================================== */
/* ===============================================
# 変数（variables = 変数）
=============================================== */
/* ===============================================
# mixin（プロパティや値をセットにしてまとめる）
=============================================== */
/* ===============================================
# キーフレーム（classにする）
=============================================== */
/* ===============================================
# フォント
=============================================== */
@import url("https://fonts.googleapis.com/css2?family=Noto+Serif+JP:wght@200;300;400;500&display=swap");
/* ===============================================
# ベース
=============================================== */
/* ===============================================
# 関数（function = 関数）
=============================================== */
/* ===============================================
# 変数（variables = 変数）
=============================================== */
* {
  box-sizing: border-box;
  font-family: "fot-tsukubrdgothic-std", sans-serif;
  font-size: 1rem;
  font-weight: 500;
  -ms-overflow-style: none;
  scrollbar-width: none;
}

*::-webkit-scrollbar {
  display: none;
}

html {
  width: 100%;
  height: 100%;
  font-size: 1rem;
}

body {
  min-width: 375px;
  width: 100%;
  height: 100%;
  position: relative;
}

main {
  background-color: #ffffe5;
  overflow: hidden;
}

ul {
  list-style: none;
}

p, h2, h3, h4, a {
  font-size: 1rem;
  font-weight: 500;
}

p {
  line-height: 1.6;
}

a {
  text-decoration: none;
  color: #3b4043;
  display: inline-block;
}

img {
  width: 100%;
  height: auto;
}

/* ===============================================
# 関数（function = 関数）
=============================================== */
/* ===============================================
# 変数（variables = 変数）
=============================================== */
.container {
  width: 100%;
  padding: 0 20px;
}

/* ===============================================
# 関数（function = 関数）
=============================================== */
/* ===============================================
# 変数（variables = 変数）
=============================================== */
.inner {
  max-width: 1522px;
  background-color: #ffffff;
  margin: 0 auto 100px auto;
  padding: 166px 131px;
  border-radius: 20px;
}

/* ===============================================
# ページ
=============================================== */
/* ===============================================
# 関数（function = 関数）
=============================================== */
/* ===============================================
# 関数（function = 関数）
=============================================== */
/* ===============================================
# 変数（variables = 変数）
=============================================== */
/* ===============================================
# 関数（function = 関数）
=============================================== */
/* ===============================================
# 関数（function = 関数）
=============================================== */
/* ===============================================
# 変数（variables = 変数）
=============================================== */
/* ===============================================
# mixin（プロパティや値をセットにしてまとめる）
=============================================== */
/* ===============================================
# 関数（function = 関数）
=============================================== */
/* ===============================================
# 関数（function = 関数）
=============================================== */
/* ===============================================
# 変数（variables = 変数）
=============================================== */
/* ===============================================
# 関数（function = 関数）
=============================================== */
/* ===============================================
# 関数（function = 関数）
=============================================== */
/* ===============================================
# 変数（variables = 変数）
=============================================== */
/* ===============================================
# mixin（プロパティや値をセットにしてまとめる）
=============================================== */
/* ===============================================
# お知らせ一覧
=============================================== */
#news .news--inner .list--item {
  padding: 2rem 0;
  border-bottom: solid 2px rgba(203, 203, 203, 0.3215686275);
}
#news .news--inner .list--item a {
  display: flex;
}
#news .news--inner .list--item .image_block {
  max-width: 150px;
  max-height: 150px;
  width: 15%;
  border-radius: 15px;
  margin-right: 15px;
}
#news .news--inner .list--item .image_block img {
  border-radius: 20px;
}
#news .news--inner .list--item .text_block {
  padding: 12px 0;
}
#news .news--inner .list--item .text_block .time--outer {
  margin-bottom: 0.5rem;
}
#news .news--inner .list--item .text_block .time--outer .icon {
  color: #ffffff;
  background-color: #7fd352;
  border-radius: 10px;
  padding: 2px 10px;
}
#news .news--inner .list--item .text_block .time--outer .time {
  color: #7fd352;
}
#news .news--inner .list--item .text_block .news_title {
  font-size: 1.375rem;
  font-weight: bold;
  margin-bottom: 1rem;
}
#news .news--inner .list--item .text_block .text {
  margin-bottom: 1rem;
}
#news .news--inner .list--item .text_block .time,
#news .news--inner .list--item .text_block .news_title,
#news .news--inner .list--item .text_block .text,
#news .news--inner .list--item .text_block span {
  color: #7fd352;
}

/* ===============================================
# 関数（function = 関数）
=============================================== */
/* ===============================================
# 関数（function = 関数）
=============================================== */
/* ===============================================
# 変数（variables = 変数）
=============================================== */
/* ===============================================
# 関数（function = 関数）
=============================================== */
/* ===============================================
# 関数（function = 関数）
=============================================== */
/* ===============================================
# 変数（variables = 変数）
=============================================== */
/* ===============================================
# mixin（プロパティや値をセットにしてまとめる）
=============================================== */
/* ===============================================
# 活動日記一覧
=============================================== */
#diary .diary--inner .list--item a {
  display: flex;
  align-items: center;
  justify-content: space-between;
  padding: 30px;
  border-bottom: solid 2px #7fd352;
  color: #7fd352;
}
#diary .diary--inner .list--item a .year,
#diary .diary--inner .list--item a .time,
#diary .diary--inner .list--item a .text {
  font-size: 1.625rem;
}
#diary .diary--inner .list--item a .year,
#diary .diary--inner .list--item a .time {
  padding-right: 1rem;
}
#diary .diary--inner .list--item a .text {
  flex-grow: 1;
}

/* ===============================================
# 関数（function = 関数）
=============================================== */
/* ===============================================
# 関数（function = 関数）
=============================================== */
/* ===============================================
# 変数（variables = 変数）
=============================================== */
/* ===============================================
# 関数（function = 関数）
=============================================== */
/* ===============================================
# 関数（function = 関数）
=============================================== */
/* ===============================================
# 変数（variables = 変数）
=============================================== */
/* ===============================================
# mixin（プロパティや値をセットにしてまとめる）
=============================================== */
/* ===============================================
# たからばこ一覧
=============================================== */
#treasure .treasure--inner {
  padding-top: 44px;
}
#treasure .tags--outer {
  border-bottom: dotted 1px #3b4043;
}
#treasure .tags {
  background-color: #8fce5a;
  border-radius: 15px;
  padding: 50px 30px;
  margin-bottom: 2rem;
}
#treasure .tags h3 {
  color: #ffffff;
  font-size: 1.625rem;
  font-weight: bold;
  margin-bottom: 1rem;
}
#treasure .tags ul {
  display: flex;
  flex-wrap: wrap;
}
#treasure .tags ul li {
  margin-right: 3rem;
  margin-bottom: 1rem;
}
#treasure .tags ul li a {
  color: #ffffff;
}
#treasure .list--item {
  border-bottom: solid 2px #7fd352;
  padding: 1.5rem 0;
  display: flex;
  align-items: center;
}
#treasure .list--item:first-child .text_tag {
  color: #7fd352;
}
#treasure .list--item .list--item--link {
  width: 40%;
  display: flex;
}
#treasure .list--item a {
  align-items: center;
}
#treasure .list--item .text-title, #treasure .list--item .text-time {
  font-size: 1.5625rem;
}
#treasure .list--item .text-time {
  margin-right: 5rem;
}
#treasure .list--item .text-title {
  width: 20%;
  flex: 1;
}
#treasure .list--item .text_tag {
  display: flex;
  flex: 1;
}
#treasure .list--item .text_tag a span {
  color: #7fd352;
}
#treasure .list--item .text_tag .space {
  padding-left: 1rem;
}
#treasure .list--item .text {
  color: #7fd352;
}

/* ===============================================
# 関数（function = 関数）
=============================================== */
/* ===============================================
# 関数（function = 関数）
=============================================== */
/* ===============================================
# 変数（variables = 変数）
=============================================== */
/* ===============================================
# 関数（function = 関数）
=============================================== */
/* ===============================================
# 関数（function = 関数）
=============================================== */
/* ===============================================
# 変数（variables = 変数）
=============================================== */
/* ===============================================
# mixin（プロパティや値をセットにしてまとめる）
=============================================== */
/* ===============================================
# サーチ結果
=============================================== */
#search .search--inner {
  padding-top: 44px;
}
#search .list--item {
  border-bottom: solid 2px #7fd352;
  padding: 1.5rem 0;
}
#search .list--item:first-child .text_tag {
  color: #7fd352;
}
#search .list--item a {
  display: flex;
  align-items: center;
}
#search .list--item .text-title, #search .list--item .text-time {
  font-size: 1.5625rem;
}
#search .list--item .text-time {
  margin-right: 5rem;
}
#search .list--item .text-title {
  width: 20%;
}
#search .list--item .text_tag {
  display: flex;
  flex: 1;
}
#search .list--item .text_tag .space {
  padding-left: 1rem;
}
#search .list--item .text {
  color: #7fd352;
}

/* ===============================================
# 関数（function = 関数）
=============================================== */
/* ===============================================
# 関数（function = 関数）
=============================================== */
/* ===============================================
# 変数（variables = 変数）
=============================================== */
/* ===============================================
# 関数（function = 関数）
=============================================== */
/* ===============================================
# 関数（function = 関数）
=============================================== */
/* ===============================================
# 変数（variables = 変数）
=============================================== */
/* ===============================================
# mixin（プロパティや値をセットにしてまとめる）
=============================================== */
/* ===============================================
# タグ検索結果
=============================================== */
#tag .tag--inner {
  padding-top: 44px;
}
#tag .list--item {
  border-bottom: solid 2px #7fd352;
  padding: 1.5rem 0;
}
#tag .list--item:first-child .text_tag {
  color: #7fd352;
}
#tag .list--item .list--item--link {
  width: 40%;
  display: flex;
}
#tag .list--item a {
  display: flex;
  align-items: center;
}
#tag .list--item .text-title, #tag .list--item .text-time {
  font-size: 1.5625rem;
}
#tag .list--item .text-time {
  margin-right: 5rem;
}
#tag .list--item .text-title {
  width: 20%;
}
#tag .list--item .text_tag {
  display: flex;
  flex: 1;
}
#tag .list--item .text_tag a {
  color: #7fd352;
}
#tag .list--item .text_tag .space {
  padding-left: 1rem;
}
#tag .list--item .text {
  color: #7fd352;
}

/* ===============================================
# 関数（function = 関数）
=============================================== */
/* ===============================================
# 関数（function = 関数）
=============================================== */
/* ===============================================
# 変数（variables = 変数）
=============================================== */
/* ===============================================
# 関数（function = 関数）
=============================================== */
/* ===============================================
# 関数（function = 関数）
=============================================== */
/* ===============================================
# 変数（variables = 変数）
=============================================== */
/* ===============================================
# mixin（プロパティや値をセットにしてまとめる）
=============================================== */
/* ===============================================
# メンバー募集ページ
=============================================== */
#recruitment #main {
  padding-top: 200px;
}
#recruitment .member,
#recruitment .requirements,
#recruitment .supporter {
  max-width: 1400px;
  background-color: #ffffff;
  padding: 80px 300px 136px 300px;
  margin: 0 auto;
}
#recruitment .member h3,
#recruitment .requirements h3,
#recruitment .supporter h3 {
  color: #f07e69;
  text-align: center;
  font-weight: bold;
  margin-bottom: 90px;
}
#recruitment .member p,
#recruitment .requirements p,
#recruitment .supporter p {
  font-size: 1.5625rem;
}
#recruitment .member,
#recruitment .requirements {
  margin-bottom: 355px;
}
#recruitment .member,
#recruitment .supporter {
  border-radius: 30px;
}
#recruitment .member h3,
#recruitment .supporter h3 {
  font-size: 3.75rem;
  line-height: 2rem;
}
#recruitment .member h3 span,
#recruitment .supporter h3 span {
  font-size: 1rem;
  letter-spacing: 1rem;
}
#recruitment .requirements {
  border-radius: 300px 0;
}
#recruitment .requirements h3 {
  font-size: 2.8125rem;
}
#recruitment .supporter {
  margin-bottom: 150px;
}

/* ===============================================
# 関数（function = 関数）
=============================================== */
/* ===============================================
# 関数（function = 関数）
=============================================== */
/* ===============================================
# 変数（variables = 変数）
=============================================== */
/* ===============================================
# 関数（function = 関数）
=============================================== */
/* ===============================================
# 関数（function = 関数）
=============================================== */
/* ===============================================
# 変数（variables = 変数）
=============================================== */
/* ===============================================
# mixin（プロパティや値をセットにしてまとめる）
=============================================== */
/* ===============================================
# えっぽについて
=============================================== */
#about .cherish {
  max-width: 1580px;
  margin: 0 auto 125px auto;
}
#about .cherish h3 {
  text-align: center;
  font-size: 2.5rem;
  color: #7fd352;
  margin-bottom: 70px;
}
#about .cherish .cherish--inner {
  display: flex;
  justify-content: space-between;
  margin-bottom: 150px;
}
#about .cherish .cherish--inner .block--outer {
  width: 25%;
  border-radius: 50%;
  background-color: #ffffff;
  box-shadow: 0px 0px 20px 20px #ffffff;
}
#about .cherish .cherish--inner .block--outer .block {
  height: 0;
  position: relative;
  padding-top: 100%;
}
#about .cherish .cherish--inner .block--outer .block p {
  font-size: 2.8125rem;
  font-weight: bold;
  color: #7fd352;
  position: absolute;
  top: calc((100% - 1rem) / 2);
  left: 0;
  right: 0;
  text-align: center;
  transform: translateY(-50%);
}
@media screen and (max-width: 1800px) {
  #about .cherish .cherish--inner .block--outer .block p {
    font-size: 3vw;
  }
}
#about .cherish .text {
  max-width: 980px;
  margin: 0 auto;
}
#about .cherish .text p {
  font-size: 1.5625rem;
}
#about .greeting {
  max-width: 1000px;
  margin: 0 auto 50px auto;
}
#about .greeting .greeting--img {
  text-align: center;
  margin-bottom: 90px;
}
#about .greeting .greeting--img img {
  max-width: 370px;
}
#about .greeting h3 {
  font-size: 2.1875rem;
  text-align: center;
  margin-bottom: 2rem;
}
#about .greeting p {
  font-size: 1.5625rem;
}

/* ===============================================
# パーツ
=============================================== */
/* ===============================================
# 関数（function = 関数）
=============================================== */
/* ===============================================
# 関数（function = 関数）
=============================================== */
/* ===============================================
# 変数（variables = 変数）
=============================================== */
/* ===============================================
# 関数（function = 関数）
=============================================== */
/* ===============================================
# 関数（function = 関数）
=============================================== */
/* ===============================================
# 変数（variables = 変数）
=============================================== */
/* ===============================================
# mixin（プロパティや値をセットにしてまとめる）
=============================================== */
/* ===============================================
# header
=============================================== */
#header {
  width: 100%;
  height: 135px;
  background-color: rgba(255, 255, 255, 0);
  margin-bottom: -135px;
}
#header .header--inner {
  width: 100%;
  display: flex;
  justify-content: space-between;
  align-items: center;
}
#header .header--inner .logo {
  min-width: 400px;
  width: 30%;
}
#header .header--inner .logo a {
  display: flex;
  align-items: center;
}
#header .header--inner .logo a div {
  max-width: 56px;
  max-height: 56px;
}
#header .header--inner .logo a p {
  font-size: 1.625rem;
  line-height: 1.2;
  color: #7fd352;
  font-weight: bold;
}

/* ===============================================
# 関数（function = 関数）
=============================================== */
/* ===============================================
# 関数（function = 関数）
=============================================== */
/* ===============================================
# 変数（variables = 変数）
=============================================== */
/* ===============================================
# 関数（function = 関数）
=============================================== */
/* ===============================================
# 関数（function = 関数）
=============================================== */
/* ===============================================
# 変数（variables = 変数）
=============================================== */
/* ===============================================
# mixin（プロパティや値をセットにしてまとめる）
=============================================== */
/* ===============================================
# ハンバーガーメニュー
=============================================== */
.menu {
  width: 135px;
  height: 135px;
  padding: 35px;
  border-radius: 0 0 0 30px;
  background-color: #ff803c;
  background-image: url("../images/footer_bg.png");
  background-repeat: no-repeat;
  background-size: cover;
  background-position: center;
  filter: brightness(110%);
}
.menu.is-open {
  filter: brightness(100%);
}
.menu.is-open span:nth-of-type(1) {
  transform: translateY(6px) rotate(-45deg);
  top: 35%;
}
.menu.is-open span:nth-of-type(2) {
  opacity: 0;
}
.menu.is-open span:nth-of-type(3) {
  transform: translateY(-6px) rotate(45deg);
  top: 62%;
}

.menu--inner {
  width: 50px;
  height: 50px;
  margin: 0 auto;
  position: relative;
}
.menu--inner span {
  width: 100%;
  height: 3px;
  display: inline-block;
  background: #ffffff;
  position: absolute;
  transition: all 0.4s;
  border-radius: 5px;
}
.menu--inner span:nth-of-type(1) {
  top: 20%;
}
.menu--inner span:nth-of-type(2) {
  top: 50%;
}
.menu--inner span:nth-of-type(3) {
  top: 80%;
}

#header.is-active {
  height: 100%;
  background-image: url("../images/footer_bg.png");
  background-repeat: no-repeat;
  background-size: cover;
  background-position: center;
  filter: brightness(110%);
  background-color: #ff803c;
  position: relative;
}
#header.is-active .header--inner {
  height: 80%;
  flex-direction: column-reverse;
  align-items: flex-start;
}
#header.is-active .logo {
  margin-left: 100px;
}
#header.is-active .logo a p {
  color: #ffffff;
}
#header.is-active .menu {
  margin-left: auto;
}
#header.is-active .menu .menu--inner span {
  background-color: #7fd352;
}
#header.is-active .hide {
  opacity: 1;
  height: auto;
  position: absolute;
  top: 100px;
  left: 100px;
}

#main.is-active, #footer.is-active {
  display: none;
}

/* ===============================================
# 関数（function = 関数）
=============================================== */
/* ===============================================
# 関数（function = 関数）
=============================================== */
/* ===============================================
# 変数（variables = 変数）
=============================================== */
/* ===============================================
# 関数（function = 関数）
=============================================== */
/* ===============================================
# 関数（function = 関数）
=============================================== */
/* ===============================================
# 変数（variables = 変数）
=============================================== */
/* ===============================================
# mixin（プロパティや値をセットにしてまとめる）
=============================================== */
/* ===============================================
# メニュー
=============================================== */
#header .hide {
  opacity: 0;
  width: 60%;
  height: 0;
  display: flex;
  flex-wrap: wrap;
  gap: 20px;
}
#header .hide section {
  width: 45%;
}
#header .hide section h2 {
  font-size: 1.75rem;
  font-weight: bold;
}
#header .hide section h2, #header .hide section a, #header .hide section p {
  margin-bottom: 1rem;
}
#header .hide section a {
  color: #ffffff;
  display: inline-block;
}
#header .hide section h2,
#header .hide section .hide--member--inner {
  color: #0d9200;
}
#header .hide .hide--about a,
#header .hide .hide--contact a {
  display: block;
}
#header .hide .hide--contact .line::after {
  content: "";
  background-image: url(../images/icon/line_icon.png);
  background-repeat: no-repeat;
  background-position: center;
  background-size: contain;
  vertical-align: middle;
  width: 30px;
  height: 30px;
  display: inline-block;
  margin-left: 5px;
}
#header .hide .hide--member {
  width: 390px;
  background: #ffffff;
  border-radius: 15px;
}
#header .hide .hide--member--inner {
  width: 100%;
  padding: 20px 30px;
  margin: 0;
}
#header .hide .hide--member--inner p:nth-of-type(2) {
  margin: 0;
}

/* ===============================================
# 関数（function = 関数）
=============================================== */
/* ===============================================
# 関数（function = 関数）
=============================================== */
/* ===============================================
# 変数（variables = 変数）
=============================================== */
/* ===============================================
# 関数（function = 関数）
=============================================== */
/* ===============================================
# 関数（function = 関数）
=============================================== */
/* ===============================================
# 変数（variables = 変数）
=============================================== */
/* ===============================================
# mixin（プロパティや値をセットにしてまとめる）
=============================================== */
/* ===============================================
# 矢印
=============================================== */
#header .hide--member .arrow {
  position: relative;
}
#header .hide--member .arrow span {
  display: inline-block;
  height: 2px;
  background: #7fd352;
  position: absolute;
}
#header .hide--member .arrow span:first-child {
  width: 1rem;
  right: 5px;
  transform: translateX(7px) translateY(-5px) rotate(45deg);
}
#header .hide--member .arrow span:last-child {
  width: 3rem;
  right: 0;
}

.contact_arrow {
  width: 35px;
  height: 35px;
  border-radius: 50% 50%;
  background-color: #7fd352;
  position: relative;
}
.contact_arrow span {
  height: 3px;
  background-color: #ffffff;
  display: inline-block;
  position: absolute;
}
.contact_arrow span:nth-of-type(1), .contact_arrow span :nth-of-type(3) {
  width: 15px;
  top: 30%;
  left: 40%;
  transform: rotate(45deg);
}
.contact_arrow span:nth-of-type(2) {
  width: 20px;
  top: 47%;
  left: 23%;
}
.contact_arrow span:nth-of-type(3) {
  width: 15px;
  top: 61%;
  left: 40%;
  transform: rotate(-45deg);
}

#diary .arrow, #treasure .arrow {
  width: 30px;
  height: 30px;
  position: relative;
}
#diary .arrow span, #treasure .arrow span {
  position: absolute;
  display: block;
  height: 2px;
  background-color: #7fd352;
}
#diary .arrow span:nth-of-type(1), #treasure .arrow span:nth-of-type(1) {
  width: 15px;
  top: 88%;
  left: 55%;
  transform: translateY(-6px) rotate(-45deg);
}
#diary .arrow span:nth-of-type(2), #treasure .arrow span:nth-of-type(2) {
  width: 30px;
  top: 50%;
}
#diary .arrow span:nth-of-type(3), #treasure .arrow span:nth-of-type(3) {
  width: 15px;
  top: 49%;
  left: 55%;
  transform: translateY(-6px) rotate(45deg);
}

.contact--outer {
  width: 100%;
  background-color: #ffffe5;
  padding: 100px 0;
  margin-bottom: -176px;
}
.contact--outer .contact {
  width: 800px;
  margin: 0 auto;
  display: flex;
  flex-direction: column;
  align-items: center;
}
.contact--outer .contact .contact--inner {
  width: 100%;
  display: flex;
  gap: 40px;
  margin-bottom: 100px;
}
.contact--outer .contact h3 {
  font-size: 2.3125rem;
  font-weight: bold;
  font-family: "router", sans-serif;
}
.contact--outer .contact .contact--tel {
  width: 100%;
  background-color: #7fd352;
  padding: 30px 40px;
  border-radius: 20px;
  position: relative;
  z-index: 2;
}
.contact--outer .contact .contact--tel h4 {
  text-align: center;
}
.contact--outer .contact .contact--tel h4,
.contact--outer .contact .contact--tel .tel {
  color: #ffffff;
  font-weight: bold;
}
.contact--outer .contact .contact--tel h4 {
  font-size: 1.875rem;
  margin-bottom: 1rem;
}
.contact--outer .contact .contact--tel .contact--tel--inner {
  display: flex;
  justify-content: center;
  align-items: center;
}
.contact--outer .contact .contact--tel .contact--tel--inner a::before {
  content: "";
  display: inline-block;
  width: 30px;
  height: 30px;
  background-size: contain;
  background-repeat: no-repeat;
  vertical-align: middle;
}
.contact--outer .contact .contact--tel .contact--tel--inner .tel {
  font-size: 1.75rem;
  display: flex;
  align-items: center;
}
.contact--outer .contact .contact--tel .contact--tel--inner .tel::before {
  background-image: url(../images/icon/tel-icon.png);
}
.contact--outer .contact .contact--tel .contact--tel--inner .tel span {
  font-size: 1rem;
}
.contact--outer .contact .contact--tel .contact--tel--inner .mail {
  color: #f39abb;
  background-color: #ffffff;
  border-radius: 20px;
  padding: 5px 15px 0 30px;
  box-shadow: 4px 4px 0px 0px rgba(0, 0, 0, 0.2);
}
.contact--outer .contact .contact--tel .contact--tel--inner .mail::before {
  background-image: url(../images/icon/mail-icon.png);
  margin: 5px 8px 0 0;
}

/* ===============================================
# 関数（function = 関数）
=============================================== */
/* ===============================================
# 関数（function = 関数）
=============================================== */
/* ===============================================
# 変数（variables = 変数）
=============================================== */
/* ===============================================
# 関数（function = 関数）
=============================================== */
/* ===============================================
# 関数（function = 関数）
=============================================== */
/* ===============================================
# 変数（variables = 変数）
=============================================== */
/* ===============================================
# mixin（プロパティや値をセットにしてまとめる）
=============================================== */
/* ===============================================
# footer
=============================================== */
.wood {
  max-width: 125px;
  margin-left: 150px;
  margin-bottom: -3px;
  position: relative;
  z-index: 1;
}

#footer {
  width: 100%;
  background-color: #7fd352;
  background-image: url("../images/footer_bg.png");
  background-repeat: no-repeat;
  background-size: cover;
  background-position: center;
  filter: brightness(110%);
}
#footer .footer--inner {
  width: 100%;
  display: flex;
  justify-content: space-between;
}
#footer .footer--inner--left {
  display: flex;
  flex-direction: column;
  margin: 25px 0 0 50px;
}
#footer .footer--inner--left .footer_logo {
  display: flex;
  flex-wrap: wrap;
  margin-bottom: 56px;
}
#footer .footer--inner--left .footer_logo div {
  max-width: 28px;
  max-height: 28px;
}
#footer .footer--inner--left .footer_logo p {
  width: 90%;
  font-size: 1.125rem;
  font-weight: bold;
  color: #ffffff;
}
#footer .footer--inner--left .footer_logo a {
  display: inline-block;
  color: #ffffff;
  margin-left: 1rem;
}
#footer .footer--inner--left .footer_nav {
  margin-bottom: 50px;
}
#footer .footer--inner--left .footer_nav ul {
  width: 260px;
  display: flex;
  flex-wrap: wrap;
  gap: 30px;
}
#footer .footer--inner--left .footer_nav ul li {
  width: 43%;
}
#footer .footer--inner--left .footer_nav ul li:nth-of-type(5) {
  width: 46%;
}
#footer .footer--inner--left .footer_nav ul li a {
  color: #ffffff;
}
#footer small {
  display: block;
  text-align: center;
  margin-bottom: 10px;
}

/* ===============================================
# 関数（function = 関数）
=============================================== */
/* ===============================================
# 関数（function = 関数）
=============================================== */
/* ===============================================
# 変数（variables = 変数）
=============================================== */
/* ===============================================
# 関数（function = 関数）
=============================================== */
/* ===============================================
# 関数（function = 関数）
=============================================== */
/* ===============================================
# 変数（variables = 変数）
=============================================== */
/* ===============================================
# mixin（プロパティや値をセットにしてまとめる）
=============================================== */
/* ===============================================
# ボタン
=============================================== */
#footer .footer_btn a {
  display: flex;
}
#footer .footer_btn .btn {
  width: 280px;
  height: 98px;
  border-radius: 0 0 15px 15px;
  text-align: center;
  background-image: url("../images/footer_bg.png");
  background-repeat: no-repeat;
  background-size: cover;
  background-position: center;
}
#footer .footer_btn .btn p {
  font-size: 1.25rem;
  color: #ffffff;
  line-height: 98px;
}
#footer .footer_btn .btn-orange {
  background-color: #ff803c;
}
#footer .footer_btn .btn-red {
  background-color: #e73245;
}

.contact .border {
  border: solid 6px #7fd352;
  background-color: rgba(255, 255, 255, 0);
  width: 376px;
  height: 180px;
  position: absolute;
  top: 0;
  left: -10px;
}
.contact .border,
.contact .contact_btn {
  border-radius: 40px 0;
}
.contact .contact_btn {
  width: 376px;
  height: 187px;
  background-color: #ffffff;
  box-shadow: 7px 7px 7px 0px rgba(145, 145, 145, 0.38);
  position: relative;
}
.contact .contact_btn > a {
  height: 100%;
  display: flex;
  align-items: center;
}
.contact .contact_btn p {
  width: 75%;
  line-height: 1.2;
  color: #7fd352;
  font-weight: bold;
  font-size: 1.625rem;
  text-align: center;
}

/* ===============================================
# 関数（function = 関数）
=============================================== */
/* ===============================================
# 関数（function = 関数）
=============================================== */
/* ===============================================
# 変数（variables = 変数）
=============================================== */
/* ===============================================
# 関数（function = 関数）
=============================================== */
/* ===============================================
# 関数（function = 関数）
=============================================== */
/* ===============================================
# 変数（variables = 変数）
=============================================== */
/* ===============================================
# mixin（プロパティや値をセットにしてまとめる）
=============================================== */
/* ===============================================
# ページタイトル
=============================================== */
.title {
  margin: 200px 0 100px 0;
}
.title h2 {
  text-align: center;
  color: #7fd352;
  font-size: 3.75rem;
  font-weight: bold;
  line-height: 2rem;
}
.title h2 span {
  font-size: 1rem;
  letter-spacing: 1rem;
}

/* ===============================================
# 関数（function = 関数）
=============================================== */
/* ===============================================
# 関数（function = 関数）
=============================================== */
/* ===============================================
# 変数（variables = 変数）
=============================================== */
/* ===============================================
# 関数（function = 関数）
=============================================== */
/* ===============================================
# 関数（function = 関数）
=============================================== */
/* ===============================================
# 変数（variables = 変数）
=============================================== */
/* ===============================================
# mixin（プロパティや値をセットにしてまとめる）
=============================================== */
/* ===============================================
# 中見出し
=============================================== */
#about .sub_title {
  font-size: 3.75rem;
  font-weight: bold;
  color: #7fd352;
  text-align: center;
  line-height: 0.6;
  margin-bottom: 80px;
}
#about .sub_title span {
  font-size: 1rem;
  letter-spacing: 1rem;
}

.contact .sub_title {
  color: #f39abb;
}

/* ===============================================
# 関数（function = 関数）
=============================================== */
/* ===============================================
# 変数（variables = 変数）
=============================================== */
/* ===============================================
# ページャー
=============================================== */
.pagination {
  text-align: center;
  margin: 50px auto 100px auto;
}
.pagination .current {
  background-color: #7fd352;
  color: #ffffff;
}

.pager,
.next,
.prev {
  margin-right: 20px;
  border: solid 1px #7fd352;
  padding: 20px;
  border-radius: 10px;
  background-color: #ffffff;
  color: #7fd352;
}
.pager:hover,
.next:hover,
.prev:hover {
  background-color: #7fd352;
  color: #ffffff;
}/*# sourceMappingURL=style.css.map */